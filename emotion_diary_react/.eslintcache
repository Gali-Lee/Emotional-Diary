[{"D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\App.js":"1","D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\pages\\user\\Join.js":"2","D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\pages\\diary\\OurDiary.js":"3","D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\pages\\diary\\DiaryHome.js":"4","D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\pages\\diary\\MyDiary.js":"5","D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\pages\\Intro.js":"6","D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\index.js":"7","D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\pages\\user\\Login.js":"8","D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\components\\Main.js":"9","D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\components\\Footer.js":"10","D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\components\\Header.js":"11","D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\components\\Calendar.js":"12","D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\pages\\diary\\MyDiaryDetail.js":"13","D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\pages\\diary\\MyDiaryWrite.js":"14","D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\pages\\user\\Modify.js":"15","D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\pages\\diary\\MyDiaryModify.js":"16","D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\store.js":"17"},{"size":1019,"mtime":1607769744920,"results":"18","hashOfConfig":"19"},{"size":3088,"mtime":1607588155571,"results":"20","hashOfConfig":"19"},{"size":2245,"mtime":1607766846502,"results":"21","hashOfConfig":"19"},{"size":593,"mtime":1607770378981,"results":"22","hashOfConfig":"19"},{"size":3306,"mtime":1607775590789,"results":"23","hashOfConfig":"19"},{"size":546,"mtime":1607329947146,"results":"24","hashOfConfig":"19"},{"size":669,"mtime":1607770471867,"results":"25","hashOfConfig":"19"},{"size":3498,"mtime":1607772549266,"results":"26","hashOfConfig":"19"},{"size":1538,"mtime":1607769457370,"results":"27","hashOfConfig":"19"},{"size":441,"mtime":1607671152183,"results":"28","hashOfConfig":"19"},{"size":1480,"mtime":1607771032535,"results":"29","hashOfConfig":"19"},{"size":4278,"mtime":1607403449917,"results":"30","hashOfConfig":"31"},{"size":357,"mtime":1607759053587,"results":"32","hashOfConfig":"19"},{"size":2144,"mtime":1607749980459,"results":"33","hashOfConfig":"19"},{"size":2202,"mtime":1607771722818,"results":"34","hashOfConfig":"19"},{"size":1028,"mtime":1607668363937,"results":"35","hashOfConfig":"19"},{"size":518,"mtime":1607770078359,"results":"36","hashOfConfig":"19"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1g1gqzf",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},"4vt5ao",{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"41"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"41"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\App.js",[],"D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\pages\\user\\Join.js",[],["76","77"],"D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\pages\\diary\\OurDiary.js",[],"D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\pages\\diary\\DiaryHome.js",["78"],"D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\pages\\diary\\MyDiary.js",["79","80","81","82"],"D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\pages\\Intro.js",[],"D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\index.js",[],"D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\pages\\user\\Login.js",[],"D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\components\\Main.js",[],"D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\components\\Footer.js",[],"D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\components\\Header.js",[],"D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\components\\Calendar.js",["83","84"],"import React from 'react';\r\nimport { MdChevronLeft, MdChevronRight } from 'react-icons/md';\r\nimport styled from 'styled-components';\r\nimport moment from 'moment';\r\n\r\nconst CalendarStyle = styled.div`\r\n  user-select: none;\r\n`;\r\nconst HeadStyle = styled(CalendarStyle)`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 12px 8px;\r\n`;\r\nconst ButtonStyle = styled.button`\r\n  cursor: pointer;\r\n  outline: none;\r\n  display: inline-flex;\r\n  background: transparent;\r\n  border: none;\r\n  font-size: 20pt;\r\n  padding: 4px;\r\n  border-radius: 4px;\r\n  &:hover {\r\n    background-color: rgba(gray, 0.1);\r\n  }\r\n  &:active {\r\n    background-color: rgba(gray, 0.2);\r\n  }\r\n`;\r\nconst TitleStyle = styled.span`\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n  padding: 4px 12px;\r\n  &:hover {\r\n    background-color: rgba(gray, 0.1);\r\n  }\r\n  &:active {\r\n    background-color: rgba(gray, 0.2);\r\n  }\r\n`;\r\nconst BodyStyle = styled(CalendarStyle)``;\r\nconst RowStyle = styled(CalendarStyle)`\r\n  display: flex;\r\n  cursor: pointer;\r\n  &:first-child {\r\n    cursor: initial;\r\n    .box {\r\n      font-weight: bold;\r\n    }\r\n    .box:hover > span.text {\r\n      background-color: white;\r\n    }\r\n  }\r\n`;\r\nconst BoxStyle = styled(RowStyle)`\r\n  position: relative;\r\n  display: inline-flex;\r\n  width: calc(100% / 7);\r\n  height: 0;\r\n  padding-bottom: calc(100% / 7);\r\n  font-size: 12pt;\r\n  &:first-child {\r\n    color: red;\r\n  }\r\n  &:last-child {\r\n    color: #588dff;\r\n  }\r\n  &.grayed {\r\n    color: gray;\r\n  }\r\n  &:hover {\r\n    span.text {\r\n      background-color: rgba(#588dff, 0.1);\r\n    }\r\n  }\r\n  &.selected {\r\n    span.text {\r\n      background-color: #588dff;\r\n      color: white;\r\n    }\r\n  }\r\n`;\r\nconst TextStyle = styled.span`\r\n  border-radius: 100%;\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 60%;\r\n  height: 60%;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n`;\r\nconst Calendar = () => {\r\n  //달력 날짜 만드는 함수\r\n  function generate() {\r\n    const today = moment(); // moment를 이용해 현재 한국 시간을 가져옴\r\n    const startWeek = today.clone().startOf('month').week();\r\n    const endWeek =\r\n      today.clone().endOf('month').week() === 1\r\n        ? 53\r\n        : today.clone().endOf('month').week();\r\n    let calendar = [];\r\n    for (let week = startWeek; week <= endWeek; week++) {\r\n      calendar.push(\r\n        <RowStyle key={week}>\r\n          {Array(7)\r\n            .fill(0)\r\n            .map((n, i) => {\r\n              let current = today\r\n                .clone()\r\n                .week(week)\r\n                .startOf('week')\r\n                .add(n + i, 'day');\r\n              let isSelected =\r\n                today.format('YYYYMMDD') === current.format('YYYYMMDD')\r\n                  ? 'selected'\r\n                  : '';\r\n              let isGrayed =\r\n                current.format('MM') === today.format('MM') ? '' : 'grayed';\r\n              return (\r\n                <BoxStyle isSelected isGrayed key={i}>\r\n                  <TextStyle>{current.format('D')}</TextStyle>\r\n                </BoxStyle>\r\n              );\r\n            })}\r\n        </RowStyle>,\r\n      );\r\n    }\r\n    return calendar;\r\n  }\r\n  return (\r\n    <CalendarStyle>\r\n      <HeadStyle>\r\n        <ButtonStyle>\r\n          <MdChevronLeft />\r\n        </ButtonStyle>\r\n        <TitleStyle>{moment().format('MMMM YYYY')}</TitleStyle>\r\n        <ButtonStyle>\r\n          <MdChevronRight />\r\n        </ButtonStyle>\r\n      </HeadStyle>\r\n      <BodyStyle>\r\n        <RowStyle>\r\n          <BoxStyle>\r\n            <TextStyle>SUN</TextStyle>\r\n          </BoxStyle>\r\n          <BoxStyle>\r\n            <TextStyle>MON</TextStyle>\r\n          </BoxStyle>\r\n          <BoxStyle>\r\n            <TextStyle>TUE</TextStyle>\r\n          </BoxStyle>\r\n          <BoxStyle>\r\n            <TextStyle>WED</TextStyle>\r\n          </BoxStyle>\r\n          <BoxStyle>\r\n            <TextStyle>THU</TextStyle>\r\n          </BoxStyle>\r\n          <BoxStyle>\r\n            <TextStyle>FRI</TextStyle>\r\n          </BoxStyle>\r\n          <BoxStyle>\r\n            <TextStyle>SAT</TextStyle>\r\n          </BoxStyle>\r\n        </RowStyle>\r\n        {generate()}\r\n      </BodyStyle>\r\n    </CalendarStyle>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n",["85","86"],"D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\pages\\diary\\MyDiaryDetail.js",["87","88","89"],"D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\pages\\diary\\MyDiaryWrite.js",["90"],"import React, { useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nconst MyDiaryWrite = () => {\r\n  const history = useHistory();\r\n\r\n  const [diary, setDiary] = useState({\r\n    id: '',\r\n    title: '',\r\n    content: '',\r\n    image1: '',\r\n  });\r\n  const uploadImg = async (e) => {\r\n    const file = e.target.files[0];\r\n    setDiary((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        [e.target.name]: file,\r\n      };\r\n    });\r\n  };\r\n  function inputHandle(e) {\r\n    setDiary((prevState) => {\r\n      // 함수형으로 쓰는 이유 : setstate 두번쓸때 값을 들고오기 우ㅐㅎ서\r\n      return {\r\n        ...prevState,\r\n        [e.target.name]: e.target.value,\r\n      };\r\n    });\r\n  }\r\n  function submitWrite(e) {\r\n    e.preventDefault();\r\n\r\n    console.log('submitPost() 실행');\r\n\r\n    //let form = document.getElementById('form');\r\n    //const formData = new FormData(form);\r\n\r\n    /* if (board3.image1 === '' && board3.image2 === '') {\r\n      alert('사진을 한장이상 업로드 해주세요!');\r\n    } else {\r\n      console.log('fetch 실행');\r\n      fetch('http://localhost:8000/board3/write', {\r\n        method: 'POST',\r\n        headers: {\r\n          Authorization: localStorage.getItem('Authorization'),\r\n        },\r\n        body: formData,\r\n      })\r\n        .then((res) => res.text())\r\n        .then((res) => {\r\n          if (res === 'ok') {\r\n            alert('글이 등록되었습니다.');\r\n            //history.push(\"/board3\");\r\n          } else {\r\n          }\r\n        });\r\n    } */\r\n  }\r\n  return (\r\n    <div>\r\n      <form>\r\n        <input\r\n          type=\"text\"\r\n          name=\"title\"\r\n          value={diary.title}\r\n          onChange={inputHandle}\r\n        />\r\n        <textarea name=\"content\">{diary.content}</textarea>\r\n        <input\r\n          type=\"file\"\r\n          name=\"image\"\r\n          value={diary.image1}\r\n          onChange={uploadImg}\r\n        />\r\n        <button onClick={submitWrite}>작성</button>\r\n        <Link to=\"/diary\">\r\n          <button>취소</button>\r\n        </Link>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyDiaryWrite;\r\n","D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\pages\\user\\Modify.js",[],"D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\pages\\diary\\MyDiaryModify.js",["91","92","93"],"import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst MyDiaryModify = () => {\r\n  const history = useHistory();\r\n\r\n  const [diary, setDiary] = useState({\r\n    id: '',\r\n    title: '',\r\n    content: '',\r\n    image1: '',\r\n  });\r\n  const uploadImg = async (e) => {\r\n    const file = e.target.files[0];\r\n    setDiary((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        [e.target.name]: file,\r\n      };\r\n    });\r\n  };\r\n  function inputHandle(e) {\r\n    setDiary((prevState) => {\r\n      // 함수형으로 쓰는 이유 : setstate 두번쓸때 값을 들고오기 우ㅐㅎ서\r\n      return {\r\n        ...prevState,\r\n        [e.target.name]: e.target.value,\r\n      };\r\n    });\r\n  }\r\n  return (\r\n    <div>\r\n      <form>\r\n        <input type=\"text\" name=\"title\" value={diary.title} />\r\n        <textarea name=\"content\">{diary.content}</textarea>\r\n        <input type=\"file\" name=\"image\" value={diary.image1} />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyDiaryModify;\r\n","D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\store.js",[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":1,"column":10,"nodeType":"100","messageId":"101","endLine":1,"endColumn":24},{"ruleId":"102","severity":1,"message":"103","line":46,"column":6,"nodeType":"104","endLine":46,"endColumn":8,"suggestions":"105"},{"ruleId":"98","severity":1,"message":"106","line":47,"column":7,"nodeType":"100","messageId":"101","endLine":47,"endColumn":16},{"ruleId":"98","severity":1,"message":"107","line":48,"column":10,"nodeType":"100","messageId":"101","endLine":48,"endColumn":20},{"ruleId":"98","severity":1,"message":"108","line":54,"column":12,"nodeType":"100","messageId":"101","endLine":54,"endColumn":26},{"ruleId":"98","severity":1,"message":"109","line":117,"column":19,"nodeType":"100","messageId":"101","endLine":117,"endColumn":29},{"ruleId":"98","severity":1,"message":"110","line":121,"column":19,"nodeType":"100","messageId":"101","endLine":121,"endColumn":27},{"ruleId":"94","replacedBy":"111"},{"ruleId":"96","replacedBy":"112"},{"ruleId":"98","severity":1,"message":"113","line":1,"column":17,"nodeType":"100","messageId":"101","endLine":1,"endColumn":26},{"ruleId":"98","severity":1,"message":"114","line":5,"column":10,"nodeType":"100","messageId":"101","endLine":5,"endColumn":15},{"ruleId":"98","severity":1,"message":"115","line":5,"column":17,"nodeType":"100","messageId":"101","endLine":5,"endColumn":25},{"ruleId":"98","severity":1,"message":"116","line":5,"column":9,"nodeType":"100","messageId":"101","endLine":5,"endColumn":16},{"ruleId":"98","severity":1,"message":"116","line":5,"column":9,"nodeType":"100","messageId":"101","endLine":5,"endColumn":16},{"ruleId":"98","severity":1,"message":"117","line":13,"column":9,"nodeType":"100","messageId":"101","endLine":13,"endColumn":18},{"ruleId":"98","severity":1,"message":"118","line":22,"column":12,"nodeType":"100","messageId":"101","endLine":22,"endColumn":23},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-unused-vars","'constrainPoint' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'boards' and 'eventDb'. Either include them or remove the dependency array.","ArrayExpression",["121"],"'eventGuid' is assigned a value but never used.","'selectDate' is assigned a value but never used.","'INITIAL_EVENTS' is defined but never used.","'isSelected' is assigned a value but never used.","'isGrayed' is assigned a value but never used.",["119"],["120"],"'useEffect' is defined but never used.","'diary' is assigned a value but never used.","'setDiary' is assigned a value but never used.","'history' is assigned a value but never used.","'uploadImg' is assigned a value but never used.","'inputHandle' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"122","fix":"123"},"Update the dependencies array to be: [boards, eventDb]",{"range":"124","text":"125"},[1110,1112],"[boards, eventDb]"]