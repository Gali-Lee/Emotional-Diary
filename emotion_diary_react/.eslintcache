[{"D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\App.js":"1","D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\pages\\user\\Join.js":"2","D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\pages\\diary\\DiaryHome.js":"3","D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\pages\\diary\\MyDiary.js":"4","D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\pages\\Intro.js":"5","D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\index.js":"6","D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\pages\\user\\Login.js":"7","D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\components\\Main.js":"8","D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\components\\Footer.js":"9","D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\components\\Header.js":"10","D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\pages\\user\\Modify.js":"11","D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\store.js":"12","D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\pages\\diary\\DiaryModify.js":"13","D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\pages\\diary\\DiaryWrite.js":"14","D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\pages\\diary\\DiaryDetail.js":"15","D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\pages\\diary\\OurDiary.js":"16"},{"size":1019,"mtime":1607923608792,"results":"17","hashOfConfig":"18"},{"size":4656,"mtime":1607927520146,"results":"19","hashOfConfig":"18"},{"size":1015,"mtime":1607935339399,"results":"20","hashOfConfig":"18"},{"size":2996,"mtime":1607935120374,"results":"21","hashOfConfig":"18"},{"size":1138,"mtime":1607848143650,"results":"22","hashOfConfig":"18"},{"size":775,"mtime":1607830757535,"results":"23","hashOfConfig":"18"},{"size":4988,"mtime":1607928483133,"results":"24","hashOfConfig":"18"},{"size":1564,"mtime":1607934991118,"results":"25","hashOfConfig":"18"},{"size":457,"mtime":1607832990578,"results":"26","hashOfConfig":"18"},{"size":2274,"mtime":1607935718688,"results":"27","hashOfConfig":"18"},{"size":4683,"mtime":1607930890895,"results":"28","hashOfConfig":"18"},{"size":518,"mtime":1607770078359,"results":"29","hashOfConfig":"18"},{"size":2275,"mtime":1607932301444,"results":"30","hashOfConfig":"18"},{"size":2786,"mtime":1607932360109,"results":"31","hashOfConfig":"18"},{"size":1942,"mtime":1607930994238,"results":"32","hashOfConfig":"18"},{"size":3055,"mtime":1607934186806,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1g1gqzf",{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"36"},"D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\App.js",[],["69","70"],"D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\pages\\user\\Join.js",["71"],"import React, { useEffect, useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst JoinStyle = styled.div`\r\n  display: grid;\r\n  height: 500px;\r\n  grid-template-columns: 50% 40%;\r\n  align-items: center;\r\n  margin: 10px 10px;\r\n`;\r\nconst LabelStyle = styled.div`\r\n  font-size: 23px;\r\n`;\r\nconst TitleStyle = styled.div`\r\n  font-size: 50px;\r\n  text-align: center;\r\n  margin: 20px 20px;\r\n`;\r\nconst IdBoxStyle = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 80% 20%;\r\n  grid-column-gap: 10px;\r\n`;\r\nconst ButtonBoxStyle = styled.div`\r\n  display: grid;\r\n  grid-template-columns: auto auto auto;\r\n  grid-column-gap: 10px;\r\n  justify-content: end;\r\n  margin: 10px;\r\n`;\r\nconst Join = () => {\r\n  const history = useHistory();\r\n\r\n  //user변수 선언\r\n  const [user, setUser] = useState({\r\n    id: '',\r\n    pw: '',\r\n    name: '',\r\n  });\r\n\r\n  function inputHandle(e) {\r\n    setUser((prevState) => {\r\n      // 함수형으로 쓰는 이유 : setstate 두번쓸때 값을 들고오기 우ㅐㅎ서\r\n      return {\r\n        ...prevState,\r\n        [e.target.name]: e.target.value,\r\n      };\r\n    });\r\n  }\r\n\r\n  //초기화 하는 함수\r\n  function reset(e) {\r\n    e.preventDefault();\r\n    setUser({\r\n      id: '',\r\n      pw: '',\r\n      name: '',\r\n    });\r\n  }\r\n\r\n  function checkId(e) {\r\n    e.preventDefault();\r\n    console.log(user.id);\r\n    console.log(JSON.stringify(user));\r\n    fetch('http://10.100.102.31:8000/member/duplicate', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json; charset=utf-8',\r\n      },\r\n      body: JSON.stringify(user),\r\n    })\r\n      .then((res) => res.text())\r\n      .then((res) => {\r\n        if (res === 'ok') {\r\n          alert('사용가능한 아이디 입니다.');\r\n        } else if (res === 'id duplicate') {\r\n          alert('이미 사용하는 아이디 입니다.');\r\n        } else {\r\n          alert('다시 중복확인 해주세요');\r\n        }\r\n      });\r\n  }\r\n\r\n  //가입하는 함수\r\n  function submitJoin(e) {\r\n    e.preventDefault();\r\n    console.log(user);\r\n    fetch('http://10.100.102.31:8000/member/join', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json; charset=utf-8',\r\n      },\r\n      body: JSON.stringify(user),\r\n    })\r\n      .then((res) => res.text())\r\n      .then((res) => {\r\n        if (res === 'ok') {\r\n          alert('가입을 했습니다.');\r\n          history.push('/login');\r\n        } else {\r\n          alert('가입을 실패했습니다.');\r\n        }\r\n      });\r\n  }\r\n  return (\r\n    <div>\r\n      <TitleStyle>회원 가입</TitleStyle>\r\n      <JoinStyle>\r\n        <div>워드 클라우드</div>\r\n        <form>\r\n          <div class=\"form-group\">\r\n            <LabelStyle>아이디</LabelStyle>\r\n            <IdBoxStyle>\r\n              <input\r\n                class=\"form-control form-control-lg\"\r\n                type=\"text\"\r\n                name=\"id\"\r\n                value={user.id}\r\n                onChange={inputHandle}\r\n                placeholder=\"아이디를 입력하세요\"\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-secondary btn-sm\"\r\n                onClick={checkId}\r\n              >\r\n                중복확인\r\n              </button>\r\n            </IdBoxStyle>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <LabelStyle>이름</LabelStyle>\r\n            <input\r\n              class=\"form-control form-control-lg\"\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={user.name}\r\n              onChange={inputHandle}\r\n              placeholder=\"이름 또는 닉네임을 입력하세요\"\r\n            />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <LabelStyle>비밀번호</LabelStyle>\r\n            <input\r\n              class=\"form-control form-control-lg\"\r\n              type=\"password\"\r\n              name=\"pw\"\r\n              value={user.pw}\r\n              onChange={inputHandle}\r\n              placeholder=\"비밀번호를 입력하세요\"\r\n            />\r\n          </div>\r\n          <ButtonBoxStyle>\r\n            <Link to=\"/login\">\r\n              <button type=\"button\" class=\"btn btn-secondary\" onClick={reset}>\r\n                취소\r\n              </button>\r\n            </Link>\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-secondary\"\r\n              onClick={submitJoin}\r\n            >\r\n              회원가입\r\n            </button>\r\n          </ButtonBoxStyle>\r\n        </form>\r\n      </JoinStyle>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Join;\r\n","D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\pages\\diary\\DiaryHome.js",[],"D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\pages\\diary\\MyDiary.js",[],"D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\pages\\Intro.js",[],"D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\index.js",[],"D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\pages\\user\\Login.js",["72"],"D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\components\\Main.js",[],"D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\components\\Footer.js",[],"D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\components\\Header.js",["73","74"],"D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\pages\\user\\Modify.js",[],"D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\store.js",[],"D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\pages\\diary\\DiaryModify.js",["75"],"D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\pages\\diary\\DiaryWrite.js",[],"D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\pages\\diary\\DiaryDetail.js",["76"],"D:\\workspace\\team_project\\Emotional-Diary\\emotion_diary_react\\src\\pages\\diary\\OurDiary.js",["77"],"import FullCalendar from '@fullcalendar/react';\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport bootstrapPlugin from '@fullcalendar/bootstrap';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst OurDiaryStyle = styled.div`\r\n  display: grid;\r\n  max-width: 100%;\r\n  align-content: baseline;\r\n  grid-template-columns: 100%;\r\n  padding: 10px 10px;\r\n`;\r\nconst OurDiary = () => {\r\n  let eventGuid = 0;\r\n\r\n  function INITIAL_EVENTS() {\r\n    //최초 데이터 불러오는것\r\n  }\r\n\r\n  function renderEventContent() {\r\n    //잘모름\r\n  }\r\n\r\n  function handleEventClick() {\r\n    //클릭했을때 동작\r\n  }\r\n\r\n  function handleEvents() {\r\n    //\r\n  }\r\n  function createEventId() {\r\n    return String(eventGuid++);\r\n  }\r\n  function handleDateSelect(selectInfo) {\r\n    let title = prompt('Please enter a new title for your event');\r\n    let calendarApi = selectInfo.view.calendar;\r\n\r\n    calendarApi.unselect(); // clear date selection\r\n\r\n    if (title) {\r\n      calendarApi.addEvent({\r\n        id: createEventId(),\r\n        title,\r\n        start: selectInfo.startStr,\r\n        end: selectInfo.endStr,\r\n        allDay: selectInfo.allDay,\r\n      });\r\n    }\r\n  }\r\n  return (\r\n    <OurDiaryStyle>\r\n      <br />\r\n      <div>우리의 일기</div>\r\n      <FullCalendar\r\n        plugins={[timeGridPlugin, interactionPlugin, bootstrapPlugin]}\r\n        headerToolbar={{\r\n          left: 'prev',\r\n          center: 'title',\r\n          right: 'next',\r\n        }}\r\n        themeSystem=\"bootstrap\"\r\n        contentHeight=\"auto\"\r\n        handleWindowResize={true}\r\n        locale=\"ko\"\r\n        initialView=\"timeGridWeek\"\r\n        editable={true}\r\n        selectable={true}\r\n        selectMirror={true}\r\n        dayMaxEvents={true}\r\n        weekends={true}\r\n        //initialEvents={boards} // alternatively, use the `events` setting to fetch from a feed\r\n        //vents={boards}\r\n        select={handleDateSelect}\r\n        eventContent={renderEventContent} // custom render function\r\n        eventClick={handleEventClick}\r\n        eventsSet={handleEvents} // called after events are initialized/added/changed/removed\r\n        /* you can update a remote database when these fire:\r\n                   eventAdd={function(){}}\r\n                   eventChange={function(){}}\r\n                   eventRemove={function(){}}\r\n                   */\r\n      />\r\n    </OurDiaryStyle>\r\n  );\r\n};\r\n\r\nexport default OurDiary;\r\n",{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":1,"column":17,"nodeType":"84","messageId":"85","endLine":1,"endColumn":26},{"ruleId":"82","severity":1,"message":"86","line":5,"column":8,"nodeType":"84","messageId":"85","endLine":5,"endColumn":18},{"ruleId":"82","severity":1,"message":"83","line":1,"column":17,"nodeType":"84","messageId":"85","endLine":1,"endColumn":26},{"ruleId":"82","severity":1,"message":"87","line":40,"column":18,"nodeType":"84","messageId":"85","endLine":40,"endColumn":27},{"ruleId":"88","severity":1,"message":"89","line":20,"column":6,"nodeType":"90","endLine":20,"endColumn":8,"suggestions":"91"},{"ruleId":"88","severity":1,"message":"89","line":23,"column":6,"nodeType":"90","endLine":23,"endColumn":8,"suggestions":"92"},{"ruleId":"82","severity":1,"message":"93","line":18,"column":12,"nodeType":"84","messageId":"85","endLine":18,"endColumn":26},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'jwt_decode' is defined but never used.","'setGroups' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["96"],["97"],"'INITIAL_EVENTS' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"98","fix":"99"},{"desc":"98","fix":"100"},"Update the dependencies array to be: [id]",{"range":"101","text":"102"},{"range":"103","text":"102"},[556,558],"[id]",[662,664]]